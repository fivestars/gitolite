import os

from phabricator_vref import PhabricatorVREF


class Differential(PhabricatorVREF):
    CHECK_FAIL_MESSAGE = """
    The commit hash {commit_hash}
    found in Phabricator revision {revision_id}
    was not found in the push.
    Fix the inconsistencies between your push and revisions and try again.
    Have a nice day :)
    """

    VREF = "VREF/DIFFERENTIAL"

    def accept_revisions(self):
        """Automatically accept a revision once the merge is completed.

        For reach revision involved, go through all of its commits and see if the commit
        exists in the push (the commit hash exists).
        If all the commits are being pushed or have been pushed, then accept the revisions.
        """
        for revision in self.revisions:
            revision_commits = [sha for htype, sha in revision["hashes"] if htype is "gtcm"]

            for commit_hash in revision_commits:
                if not self.commit_exists(commit_hash):
                    self.fail(commit_hash=commit_hash, revision_id=revision["id"])
                    return False

        for revision in self.revisions:
            self.p.differential.createcomment(revision_id=revision["id"],
                    message="You did it! Good Job!",
                    action="accept")
            print "Accepting revision", revision["id"]

        return True


if __name__ == "__main__":
    import sys
    oldsha, newsha, repo_path = sys.argv[1:4]
    Differential(oldsha, newsha, repo_path).accept_revisions()
